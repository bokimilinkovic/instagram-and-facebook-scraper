{
    "swagger": "2.0",
    "info": {
        "description": "This is a server side of task.",
        "title": "Impact Bakery task API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "petstore.swagger.io",
    "basePath": "/v1",
    "paths": {
        "/v1/instagram/:name": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "SearchInstagramByName returns instagram datas based on provided name.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username in instagram",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.InstagramAccount"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "Login checks if the user is present in database, and returns encoded token with his informations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login checks users credentials.",
                "parameters": [
                    {
                        "description": " ",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProductDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad_credentials_provided"
                    }
                }
            }
        },
        "/v1/products": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "FindAll returns all products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.Product"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates new product that is going to be saved in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create creates new product.",
                "parameters": [
                    {
                        "description": " ",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProductDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Can_not_bind_request_Body"
                    },
                    "404": {
                        "description": "Can_not_bind_request_Body"
                    }
                }
            }
        },
        "/v1/register": {
            "post": {
                "description": "Register is storing new user which wants to use our application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register creates new user in database.",
                "parameters": [
                    {
                        "description": " ",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully_registered",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad_credentials_provided"
                    },
                    "404": {
                        "description": "Bad_credentials_provided"
                    }
                }
            }
        },
        "/v1/socialmedia/:name": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "SearchSocialMediaByName returns instagram and facebook datas based on provided name.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username_in_instagram.",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SocialMediaDto"
                        }
                    },
                    "400": {
                        "description": "Bad_request_payload"
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "description": "FindAll returns all users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "FindAll returns all users present in application.",
                "responses": {
                    "20": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal_server_error"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ProductDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "omitempty": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sponsor": {
                    "type": "string"
                }
            }
        },
        "dto.SocialMediaDto": {
            "type": "object",
            "properties": {
                "biography": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "follower_count": {
                    "type": "integer"
                },
                "followers": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "likes": {
                    "type": "string"
                },
                "media_count": {
                    "type": "integer"
                },
                "profile_pic_url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "usertags_count": {
                    "type": "integer"
                }
            }
        },
        "model.InstagramAccount": {
            "type": "object",
            "properties": {
                "biography": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "follower_count": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "media_count": {
                    "type": "integer"
                },
                "profile_pic_url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "usertags_count": {
                    "type": "integer"
                }
            }
        },
        "model.Product": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sponsor": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}